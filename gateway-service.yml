spring:
  config:
    import: "optional:configserver:"
  application:
    name: gateway-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/dh
          jwk-set-uri: http://localhost:8080/realms/dh/protocol/openid-connect/certs
          jws-algorithm: RS256  # El algoritmo usado en tu token es RS256
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/dh
            token-uri: http://localhost:8080/realms/dh/protocol/openid-connect/token
            authorization-uri: http://localhost:8080/realms/dh/protocol/openid-connect/auth
            user-info-uri: http://localhost:8080/realms/dh/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8080/realms/dh/protocol/openid-connect/certs
        registration:
          keycloak-app:
            provider: keycloak
            client-id: front-end  # Esto coincide con el "azp" en tu token
            client-name: Frontend Application
            authorization-grant-type: authorization_code
            scope: openid,email,profile  # Coincide con el scope en tu token
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
  cloud:
    config:
      discovery:
        serviceId: config-service
        enabled: true
    gateway:
      default-filters:
        - TokenRelay
        - SaveSession
      routes:
        - id: checkout-service
          uri: http://localhost:8082
          predicates:
            - Path=/checkout/**
          filters:
            - PreserveHostHeader
            - RemoveRequestHeader=Cookie
            - AddRequestHeader=X-Request-from, gateway
            - AddResponseHeader=X-Response-Red, blue

server:
  port: 8085

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG
    reactor.netty: DEBUG
    org.springframework.web: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: gateway,health,info,routes
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: always
